// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 98350 $
// File generated on 2024-05-12 오후 3:21:30 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\OpenAPI\KHOpenAPI.ocx (1)
// LIBID: {6D8C2B4D-EF41-4750-8AD4-C299033833FB}
// LCID: 0
// Helpfile: 
// HelpString: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN32
// ************************************************************************ //
#ifndef   KHOpenAPILib_OCXH
#define   KHOpenAPILib_OCXH

#pragma option push -b -w-inl -w-8118
#pragma pack(push, 4)

#include <Vcl.OleCtrls.hpp>
#include <Vcl.OleServer.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <System.Win.StdVCL.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "KHOpenAPILib_TLB.h"
namespace Khopenapilib_tlb
{

// *********************************************************************//
// HelpString: 
// Version:    1.2
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TKHOpenAPI
// Help String      : 
// Default Interface: _DKHOpenAPI
// Def. Intf. Object: _DKHOpenAPIDisp
// Def. Intf. DISP? : Yes
// Event   Interface: _DKHOpenAPIEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveTrData)(System::TObject * Sender, 
                                                                WideString sScrNo, WideString sRQName,
                                                                WideString sTrCode, WideString sRecordName,
                                                                WideString sPrevNext, long nDataLength,
                                                                WideString sErrorCode, WideString sMessage,
                                                                WideString sSplmMsg);
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveRealData)(System::TObject * Sender, 
                                                                  WideString sRealKey, WideString sRealType,
                                                                  WideString sRealData);
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveMsg)(System::TObject * Sender, 
                                                             WideString sScrNo, WideString sRQName, WideString sTrCode,
                                                             WideString sMsg);
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveChejanData)(System::TObject * Sender, 
                                                                    WideString sGubun, long nItemCnt,
                                                                    WideString sFIdList);
typedef void __fastcall (__closure * TKHOpenAPIOnEventConnect)(System::TObject * Sender, 
                                                               long nErrCode);
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveInvestRealData)(System::TObject * Sender, 
                                                                        WideString sRealKey);
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveRealCondition)(System::TObject * Sender, 
                                                                       WideString sTrCode, WideString strType,
                                                                       WideString strConditionName,
                                                                       WideString strConditionIndex);
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveTrCondition)(System::TObject * Sender, 
                                                                     WideString sScrNo, WideString strCodeList,
                                                                     WideString strConditionName,
                                                                     int nIndex, int nNext);
typedef void __fastcall (__closure * TKHOpenAPIOnReceiveConditionVer)(System::TObject * Sender, 
                                                                      long lRet, WideString sMsg);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host  in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TKHOpenAPI : public Vcl::Olectrls::TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TKHOpenAPIOnReceiveTrData      FOnReceiveTrData;
  TKHOpenAPIOnReceiveRealData    FOnReceiveRealData;
  TKHOpenAPIOnReceiveMsg         FOnReceiveMsg;
  TKHOpenAPIOnReceiveChejanData  FOnReceiveChejanData;
  TKHOpenAPIOnEventConnect       FOnEventConnect;
  TKHOpenAPIOnReceiveInvestRealData FOnReceiveInvestRealData;
  TKHOpenAPIOnReceiveRealCondition FOnReceiveRealCondition;
  TKHOpenAPIOnReceiveTrCondition FOnReceiveTrCondition;
  TKHOpenAPIOnReceiveConditionVer FOnReceiveConditionVer;

  // Default Interace of OCX
  //
  _DKHOpenAPIDisp m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[9];
  static Vcl::Olectrls::TControlData2 CControlData;
  static GUID          CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  _DKHOpenAPIDisp __fastcall GetDefaultInterface();
  _DKHOpenAPIDisp __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TKHOpenAPI(System::Classes::TComponent* AOwner) : Vcl::Olectrls::TOleControl(AOwner)
  {};
  virtual  __fastcall TKHOpenAPI(HWND        Parent) : Vcl::Olectrls::TOleControl(Parent)
  {};

  // OCX methods
  //
  long            __fastcall CommConnect(void);
  void            __fastcall CommTerminate(void);
  long            __fastcall CommRqData(WideString sRQName, WideString sTrCode, long nPrevNext, WideString sScreenNo);
  WideString            __fastcall GetLoginInfo(WideString sTag);
  long            __fastcall SendOrder(WideString sRQName, WideString sScreenNo, WideString sAccNo, long nOrderType,
                                       WideString sCode, long nQty, long nPrice, WideString sHogaGb,
                                       WideString sOrgOrderNo);
  long            __fastcall SendOrderFO(WideString sRQName, WideString sScreenNo, WideString sAccNo, WideString sCode,
                                         long lOrdKind, WideString sSlbyTp, WideString sOrdTp, long lQty,
                                         WideString sPrice, WideString sOrgOrdNo);
  void            __fastcall SetInputValue(WideString sID, WideString sValue);
  long            __fastcall SetOutputFID(WideString sID);
  WideString            __fastcall CommGetData(WideString sJongmokCode, WideString sRealType, WideString sFieldName,
                                         long nIndex, WideString sInnerFieldName);
  void            __fastcall DisconnectRealData(WideString sScnNo);
  long            __fastcall GetRepeatCnt(WideString sTrCode, WideString sRecordName);
  long            __fastcall CommKwRqData(WideString sArrCode, long bNext, int nCodeCount, int nTypeFlag,
                                          WideString sRQName, WideString sScreenNo);
  WideString            __fastcall GetAPIModulePath(void);
  WideString            __fastcall GetCodeListByMarket(WideString sMarket);
  long            __fastcall GetConnectState(void);
  WideString            __fastcall GetMasterCodeName(WideString sTrCode);
  long            __fastcall GetMasterListedStockCnt(WideString sTrCode);
  WideString            __fastcall GetMasterConstruction(WideString sTrCode);
  WideString            __fastcall GetMasterListedStockDate(WideString sTrCode);
  WideString            __fastcall GetMasterLastPrice(WideString sTrCode);
  WideString            __fastcall GetMasterStockState(WideString sTrCode);
  long            __fastcall GetDataCount(WideString strRecordName);
  WideString            __fastcall GetOutputValue(WideString strRecordName, long nRepeatIdx, long nItemIdx);
  WideString            __fastcall GetCommData(WideString strTrCode, WideString strRecordName, long nIndex,
                                         WideString strItemName);
  WideString            __fastcall GetCommRealData(WideString sTrCode, long nFid);
  WideString            __fastcall GetChejanData(long nFid);
  WideString            __fastcall GetThemeGroupList(long nType);
  WideString            __fastcall GetThemeGroupCode(WideString strThemeCode);
  WideString            __fastcall GetFutureList(void);
  WideString            __fastcall GetFutureCodeByIndex(int nIndex);
  WideString            __fastcall GetActPriceList(void);
  WideString            __fastcall GetMonthList(void);
  WideString            __fastcall GetOptionCode(WideString strActPrice, int nCp, WideString strMonth);
  WideString            __fastcall GetOptionCodeByMonth(WideString sTrCode, int nCp, WideString strMonth);
  WideString            __fastcall GetOptionCodeByActPrice(WideString sTrCode, int nCp, int nTick);
  WideString            __fastcall GetSFutureList(WideString strBaseAssetCode);
  WideString            __fastcall GetSFutureCodeByIndex(WideString strBaseAssetCode, int nIndex);
  WideString            __fastcall GetSActPriceList(WideString strBaseAssetGb);
  WideString            __fastcall GetSMonthList(WideString strBaseAssetGb);
  WideString            __fastcall GetSOptionCode(WideString strBaseAssetGb, WideString strActPrice, int nCp,
                                            WideString strMonth);
  WideString            __fastcall GetSOptionCodeByMonth(WideString strBaseAssetGb, WideString sTrCode, int nCp,
                                                   WideString strMonth);
  WideString            __fastcall GetSOptionCodeByActPrice(WideString strBaseAssetGb, WideString sTrCode, int nCp,
                                                      int nTick);
  WideString            __fastcall GetSFOBasisAssetList(void);
  WideString            __fastcall GetOptionATM(void);
  WideString            __fastcall GetSOptionATM(WideString strBaseAssetGb);
  WideString            __fastcall GetBranchCodeName(void);
  long            __fastcall CommInvestRqData(WideString sMarketGb, WideString sRQName, WideString sScreenNo);
  long            __fastcall SendOrderCredit(WideString sRQName, WideString sScreenNo, WideString sAccNo,
                                             long nOrderType, WideString sCode, long nQty, long nPrice,
                                             WideString sHogaGb, WideString sCreditGb, WideString sLoanDate,
                                             WideString sOrgOrderNo);
  WideString            __fastcall KOA_Functions(WideString sFunctionName, WideString sParam);
  long            __fastcall SetInfoData(WideString sInfoData);
  long            __fastcall SetRealReg(WideString strScreenNo, WideString strCodeList, WideString strFidList,
                                        WideString strOptType);
  long            __fastcall GetConditionLoad(void);
  WideString            __fastcall GetConditionNameList(void);
  long            __fastcall SendCondition(WideString strScrNo, WideString strConditionName, int nIndex,
                                           int nSearch);
  void            __fastcall SendConditionStop(WideString strScrNo, WideString strConditionName, int nIndex);
  VARIANT         __fastcall GetCommDataEx(WideString strTrCode, WideString strRecordName);
  void            __fastcall SetRealRemove(WideString strScrNo, WideString strDelCode);
  long            __fastcall GetMarketType(WideString sTrCode);

  // OCX properties
  //
  __property _DKHOpenAPIDisp ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property Visible;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //

  // OCX Events
  //
  __property TKHOpenAPIOnReceiveTrData OnReceiveTrData={ read=FOnReceiveTrData, write=FOnReceiveTrData };
  __property TKHOpenAPIOnReceiveRealData OnReceiveRealData={ read=FOnReceiveRealData, write=FOnReceiveRealData };
  __property TKHOpenAPIOnReceiveMsg OnReceiveMsg={ read=FOnReceiveMsg, write=FOnReceiveMsg };
  __property TKHOpenAPIOnReceiveChejanData OnReceiveChejanData={ read=FOnReceiveChejanData, write=FOnReceiveChejanData };
  __property TKHOpenAPIOnEventConnect OnEventConnect={ read=FOnEventConnect, write=FOnEventConnect };
  __property TKHOpenAPIOnReceiveInvestRealData OnReceiveInvestRealData={ read=FOnReceiveInvestRealData, write=FOnReceiveInvestRealData };
  __property TKHOpenAPIOnReceiveRealCondition OnReceiveRealCondition={ read=FOnReceiveRealCondition, write=FOnReceiveRealCondition };
  __property TKHOpenAPIOnReceiveTrCondition OnReceiveTrCondition={ read=FOnReceiveTrCondition, write=FOnReceiveTrCondition };
  __property TKHOpenAPIOnReceiveConditionVer OnReceiveConditionVer={ read=FOnReceiveConditionVer, write=FOnReceiveConditionVer };
};
typedef TKHOpenAPI  TKHOpenAPIProxy;

};     // namespace Khopenapilib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Khopenapilib_tlb;
#endif

#pragma pack(pop)
#pragma option pop

#endif // KHOpenAPILib_OCXH
